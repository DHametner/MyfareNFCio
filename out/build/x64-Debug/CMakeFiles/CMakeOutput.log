The system is: Windows - 10.0.19044 - AMD64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.32.31326/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.32.31332 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCCompilerId.c
Microsoft (R) Incremental Linker Version 14.32.31332.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCCompilerId.exe 
CMakeCCompilerId.obj 


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.exe"

Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.obj"

The C compiler identification is MSVC, found in "C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/3.22.22040401-MSVC_2/CompilerIdC/CMakeCCompilerId.exe"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.32.31326/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.32.31332 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCXXCompilerId.cpp
Microsoft (R) Incremental Linker Version 14.32.31332.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCXXCompilerId.exe 
CMakeCXXCompilerId.obj 


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.obj"

The CXX compiler identification is MSVC, found in "C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/3.22.22040401-MSVC_2/CompilerIdCXX/CMakeCXXCompilerId.exe"

Detecting C compiler ABI info compiled with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_c151c && [1/2] Building C object CMakeFiles\cmTC_c151c.dir\CMakeCCompilerABI.c.obj
[2/2] Linking C executable cmTC_c151c.exe



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_6d8a2 && [1/2] Building CXX object CMakeFiles\cmTC_6d8a2.dir\CMakeCXXCompilerABI.cpp.obj
[2/2] Linking CXX executable cmTC_6d8a2.exe



Determining if the include file inttypes.h exists passed with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_7f61e && [1/2] Building CXX object CMakeFiles\cmTC_7f61e.dir\CheckIncludeFile.cxx.obj
[2/2] Linking CXX executable cmTC_7f61e.exe



Determining if the include file memory.h exists passed with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_6f709 && [1/2] Building CXX object CMakeFiles\cmTC_6f709.dir\CheckIncludeFile.cxx.obj
[2/2] Linking CXX executable cmTC_6f709.exe



Determining if the include file stdint.h exists passed with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_04198 && [1/2] Building CXX object CMakeFiles\cmTC_04198.dir\CheckIncludeFile.cxx.obj
[2/2] Linking CXX executable cmTC_04198.exe



Determining if the include file sys/stat.h exists passed with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_03e03 && [1/2] Building CXX object CMakeFiles\cmTC_03e03.dir\CheckIncludeFile.cxx.obj
[2/2] Linking CXX executable cmTC_03e03.exe



Determining if the include file sys/types.h exists passed with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_3981f && [1/2] Building CXX object CMakeFiles\cmTC_3981f.dir\CheckIncludeFile.cxx.obj
[2/2] Linking CXX executable cmTC_3981f.exe



Determining if the include file unordered_map exists passed with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_a8b18 && [1/2] Building CXX object CMakeFiles\cmTC_a8b18.dir\CheckIncludeFile.cxx.obj
[2/2] Linking CXX executable cmTC_a8b18.exe



Determining if the include file unordered_set exists passed with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_56d76 && [1/2] Building CXX object CMakeFiles\cmTC_56d76.dir\CheckIncludeFile.cxx.obj
[2/2] Linking CXX executable cmTC_56d76.exe



Determining if the include file stddef.h exists passed with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_d9e25 && [1/2] Building CXX object CMakeFiles\cmTC_d9e25.dir\CheckIncludeFile.cxx.obj
[2/2] Linking CXX executable cmTC_d9e25.exe



Determining size of unsigned __int16 passed with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_2f674 && [1/2] Building CXX object CMakeFiles\cmTC_2f674.dir\HAVE___UINT16.cpp.obj
[2/2] Linking CXX executable cmTC_2f674.exe



Determining size of uint16_t passed with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_6b71b && [1/2] Building CXX object CMakeFiles\cmTC_6b71b.dir\HAVE_UINT16_T.cpp.obj
[2/2] Linking CXX executable cmTC_6b71b.exe



Determining if the snprintf exist passed with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_327b2 && [1/2] Building CXX object CMakeFiles\cmTC_327b2.dir\CheckSymbolExists.cxx.obj
[2/2] Linking CXX executable cmTC_327b2.exe


File C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:
/* */
#include <cstdio>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef snprintf
  return ((int*)(&snprintf))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the function UnDecorateSymbolName exists in the dbghelp passed with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_6ab22 && [1/2] Building C object CMakeFiles\cmTC_6ab22.dir\CheckFunctionExists.c.obj
[2/2] Linking C executable cmTC_6ab22.exe



Performing C++ SOURCE FILE Test HAVE___DECLSPEC succeeded with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_434d4 && [1/2] Building CXX object CMakeFiles\cmTC_434d4.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_434d4.exe


Source file was:

__declspec(selectany) int a;
int main(void) { return 0; }

Performing C++ SOURCE FILE Test STL_STD_NAMESPACE succeeded with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_447e2 && [1/2] Building CXX object CMakeFiles\cmTC_447e2.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_447e2.exe


Source file was:

#include <vector>
std::vector<int> t; int main() { }

Performing C++ SOURCE FILE Test HAVE_USING_OPERATOR succeeded with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_a4221 && [1/2] Building CXX object CMakeFiles\cmTC_a4221.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_a4221.exe


Source file was:

#include <iostream>
std::ostream& operator<<(std::ostream&, struct s);
using ::operator<<;
int main() { }

Performing C++ SOURCE FILE Test HAVE_NAMESPACES succeeded with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_d6acd && [1/2] Building CXX object CMakeFiles\cmTC_d6acd.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_d6acd.exe


Source file was:

namespace Outer { namespace Inner { int i = 0; }}
using namespace Outer::Inner;;
int main() { return i; }

Performing C++ SOURCE FILE Test HAVE_MSVC_TLS succeeded with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_b61dd && [1/2] Building CXX object CMakeFiles\cmTC_b61dd.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_b61dd.exe


Source file was:

__declspec(thread) int tls;
int main() { }

Performing C++ SOURCE FILE Test HAVE_CXX11_TLS succeeded with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_fe01d && [1/2] Building CXX object CMakeFiles\cmTC_fe01d.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_fe01d.exe


Source file was:

thread_local int tls;
int main() { }

Performing C++ SOURCE FILE Test HAVE_ALIGNED_STORAGE succeeded with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_860e8 && [1/2] Building CXX object CMakeFiles\cmTC_860e8.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_860e8.exe


Source file was:

#include <type_traits>
std::aligned_storage<sizeof(char), alignof(char)>::type data;
int main() { }

Performing C++ SOURCE FILE Test HAVE_CXX11_ATOMIC succeeded with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_5f6b4 && [1/2] Building CXX object CMakeFiles\cmTC_5f6b4.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_5f6b4.exe


Source file was:

#include <atomic>
std::atomic<int> i;
int main() { }

Performing C++ SOURCE FILE Test HAVE_CXX11_CONSTEXPR succeeded with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_85ea0 && [1/2] Building CXX object CMakeFiles\cmTC_85ea0.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_85ea0.exe


Source file was:

constexpr int x = 0;
int main() { }

Performing C++ SOURCE FILE Test HAVE_CXX11_CHRONO succeeded with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_8c614 && [1/2] Building CXX object CMakeFiles\cmTC_8c614.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_8c614.exe


Source file was:

#include <chrono>
std::chrono::seconds s;
int main() { }

Performing C++ SOURCE FILE Test HAVE_CXX11_NULLPTR_T succeeded with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_9ab76 && [1/2] Building CXX object CMakeFiles\cmTC_9ab76.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_9ab76.exe


Source file was:

#include <cstddef>
void foo(std::nullptr_t) {}
int main(void) { foo(nullptr); }

Performing C++ SOURCE FILE Test HAVE_SYMBOLIZE succeeded with the following compile output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_07d35 && [1/2] Building CXX object CMakeFiles\cmTC_07d35.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_07d35.exe


...and run output:

Return value: 1
Source file was:
    #include <windows.h>
    #include <dbghelp.h>
    #include <cstdlib>

    void foobar() { }

    int main()
    {
        HANDLE process = GetCurrentProcess();

        if (!SymInitialize(process, NULL, TRUE))
            return EXIT_FAILURE;

        char buf[sizeof(SYMBOL_INFO) + MAX_SYM_NAME];
        SYMBOL_INFO *symbol = reinterpret_cast<SYMBOL_INFO *>(buf);
        symbol->SizeOfStruct = sizeof(SYMBOL_INFO);
        symbol->MaxNameLen = MAX_SYM_NAME;

        void* const pc = reinterpret_cast<void*>(&foobar);
        BOOL ret = SymFromAddr(process, reinterpret_cast<DWORD64>(pc), 0, symbol);

        return ret ? EXIT_SUCCESS : EXIT_FAILURE;
    }
    
Performing C++ SOURCE FILE Test COMPILER_HAS_DEPRECATED succeeded with the following output:
Change Dir: C:/Users/Daniel/source/repos/MyfareNFCio/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_85c47 && [1/2] Building CXX object CMakeFiles\cmTC_85c47.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_85c47.exe


Source file was:
__declspec(deprecated) int somefunc() { return 0; }
    int main() { return somefunc();}
